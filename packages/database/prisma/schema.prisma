generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DataSourceConnection {
  id          String   @id @default(cuid())
  // For example: "bigquery", "snowflake".
  type        String
  // The display name of the data source connection. Set by the user.
  name        String
  // The credentials to connect to the data source.
  // The format of the credentials is data source specific.
  credentials Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  // The tables that have been selected by the user for this data source.
  selectedTables SelectedTable[]

  @@map("data_source_connections")
}

// A table that has been selected by the user for a data source. This table is meant
// to only contain information on which tables have been selected and not be connected
// to any other tables as it might be deleted.
model SelectedTable {
  id                 String   @id @default(cuid())
  fullyQualifiedName String
  connectionId       String
  createdAt          DateTime @default(now())

  connection DataSourceConnection @relation(fields: [connectionId], references: [id], onDelete: Cascade)

  @@unique([connectionId, fullyQualifiedName])
  @@map("selected_tables")
}

model ContextRevision {
  id        String   @id @default(cuid())
  parentId  String?
  content   Json     @db.JsonB
  createdAt DateTime @default(now())

  parent   ContextRevision?  @relation("Parent", fields: [parentId], references: [id], onDelete: Restrict)
  children ContextRevision[] @relation("Parent")
  branches ContextBranch[]

  @@map("context_revisions")
}

model ContextBranch {
  id         String   @id @default(cuid())
  name       String   @unique
  revisionId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  revision ContextRevision @relation(fields: [revisionId], references: [id], onDelete: Cascade)

  @@map("context_branches")
}

model ContextSourceConnection {
  id            String   @id @default(cuid())
  // For example: "text", "github".
  type          String
  // The display name of the context source connection. Set by the user.
  name          String
  // The configuration of the context source connection.
  // The format of the configuration is context source specific.
  configuration Json
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt

  @@map("context_source_connections")
}

model Job {
  id      String @id @default(cuid())
  queue   String
  payload Json   @db.JsonB

  runAt       DateTime @default(now())
  attempts    Int      @default(0)
  maxAttempts Int
  lastError   String?

  lockedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("jobs")
}
